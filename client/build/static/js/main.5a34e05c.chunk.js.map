{"version":3,"sources":["components/ressources/logo 2.svg","components/ressources/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 2.png","components/ressources/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 1.png","components/ressources/logo 1.svg","components/ressources/Frame 7.svg","components/ressources/Frame 1.png","components/ressources/1129342 1.png","_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/IPConfig.js","components/views/LandingPage/LandingPage.js","components/utils/FileUpload.js","components/views/FotoAddingPage/FotoAddingPage.js","components/views/ViewingPage/ViewingPage.js","components/views/UserManagePage/UserManagePage.js","components/views/FotoEditingPage/FotoEditingPage.js","components/views/AdminLandingPage/AdminLandingPage.js","components/views/HomePage/HomePage.js","components/views/AboutPage/AboutPage.js","components/utils/NewFileUpload.js","components/views/TestPage/TestPage.js","components/App.js","serviceWorker.js","_reducers/user_reducer.js","_reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","console","log","window","setItem","userId","id","removeItem","location","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","level","es_form","Item","label","input","prefix","icon","style","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","es_button","htmlType","minWidth","disabled","href","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","hasFeedback","validateStatus","onClick","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","userData","role","menu","mode","key","title","status","NavBar","visible","setVisible","position","zIndex","width","overflowX","overflowY","src","logo","height","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","drawerStyle","theme","Footer","display","flexDirection","alignItems","justifyContent","backgroundColor","top","right","USER_IP","LandingPage","fotos","setFotos","loadingValue","setLoadingValue","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","onCollapseValue","setOnCollapseValue","_useState9","_useState10","filterCopyrightSource","setFilterCopyrightSource","_useState11","_useState12","filterAuthor","setFilterAuthor","_useState13","_useState14","filtercreationDate","setFiltercreationDate","_useState15","_useState16","filterTitle","setFilterTitle","_useState17","_useState18","filterImageMaterial","setFilterImageMaterial","_useState19","_useState20","filterCountry","setFilterCountry","_useState21","_useState22","filterCity","setFilterCity","_useState23","_useState24","filterAll","setfilterAll","_useState25","_useState26","filterDescription","setfilterDescription","_useState27","_useState28","mainTagValue","setMainTagValue","getAllFotos","Axios","notifyError","error","code","text","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","fotoCards","map","foto","index","Col","md","lg","xl","xxl","react_router_dom","to","pathname","_id","params","indexValue","exact","strict","textDecoration","Card","CardBody","CardTitle","tag","CardImg","compressedImage","alt","description","Search","allowClear","enterButton","loading","size","onSearch","mainTag","searched","event","target","dist_default","trigger","DownOutlined_default","UpOutlined_default","fontWeight","es_checkbox","checked","es_select","defaultValue","Option","react_toastify_esm","Row","FileUpload","images","setImages","defaultImage","refreshFunction","dist_es","onDrop","files","formData","FormData","append","header","content-type","toConsumableArray","multiple","maxSize","getRootProps","getInputProps","currentIndex","indexOf","newImages","splice","onDelete","FotoAddingPage","originalImage","setOriginalImage","setCompressedImage","imageMaterialValue","setImageMaterialValue","creationDateValue","setCreationDateValue","authorValue","setAuthorValue","copyrightSourceValue","setCopyrightSourceValue","copyrightSourceIsAuthor","setCopyrightSourceIsAuthor","newTagValue","setNewTagValue","tags","setTags","suggestions","setSuggestions","delimiters","updateOriginalImage","updateCompressedImage","handleChangeMainTag","handleImageMaterial","handleChangeCreationDate","date","dateString","handleChangeCopyrightSourceIsAuthor","handleChangeAuthor","handleChangeAddTag","handleChangeCopyrightSource","handleDeleteTags","i","filter","handleAdditionTags","find","element","handleDragTags","currPos","newPos","newTags","slice","arrTags","gpsLocation","city","country","newDate","Date","getDate","month","getMonth","year","getFullYear","_userid","copyrightSource","author","uploadDate","creationDate","imageMaterial","FotoAddingPage_Title","utils_FileUpload","es_switch","CopyrightOutlined_default","UserOutlined_default","EditOutlined_default","maxLength","TextArea","rows","ReactTags","handleDelete","handleAddition","handleDrag","autofocus","minQueryLength","inline","allowDeleteFromEmptyInput","PlusOutlined_default","newTagName","tagid","handleSaveNewTag","date_picker","CompassOutlined_default","ViewingPage","fotoData","setFotoData","startIndexValue","setStartIndexValue","refImg","useRef","descriptionValue","setDescriptionValue","titleValue","settitleValue","setcopyrightSourceValue","setauthorValue","setcreationDateValue","coutnryValue","setcoutnryValue","cityValue","setcityValue","arrFotos","original","thumbnail","thumbnailTitle","d","toDateString","ViewingPage_Title","image_gallery_default","ref","items","startIndex","thumbnailPosition","showBullets","showIndex","onSlide","whiteSpace","UserManagePage","users","setUsers","notify","userCards","CardText","Switch","edtiSingleUser","defaultChecked","originalImageInitial","setOriginalImageInitial","compressedImageInitial","setCompressedImageInitial","setdescriptionValue","locationValue","setlocationValue","countryValue","setcountryValue","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","handleChangeTitle","handleChangeDescription","handleChangeCity","handleChangeCountry","handleChangeLocation","match","FotoEditingPage_Title","_fotosid","DeleteOutlined_default","HomePage","pergament1","pergament2","card1","AboutPage","link","download","bio","about","NewFileUpload","imagesWatermark","setImagesWatermark","imagesSmall","setImagesSmall","decideImage","setDecideImage","selectedValue","setSelectedValue","currentSelected","setCurrentSelected","newcollapseValue","newselectValue","handleOnSelectImage","newSelectedValue","forEach","item","handleRemoveDecideImage","newList","Fragment","class","oldimg","newimg","onDecideOldImage","path","newpath","imagename","newoldimagenameindex","newoldimagename","join","newname","dataToSubmit2","onDecideNewImage","SyncLoader_default","open","newCollapseValue","handleOnCollapseValue","split","config","imageName","imagePos","newImagesWatermark","imageWatermark","newImagesSmall","imageSmall","originalpath","TestPage","utils_NewFileUpload","App","react","fallback","NavBar_NavBar","react_router","component","Auth","LoginPage","AdminLandingPage","FotoEditingPage","Footer_Footer","Boolean","hostname","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a34e05c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo 2.92115a2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 2.faae0f67.png\";","module.exports = __webpack_public_path__ + \"static/media/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 1.33d6e8b0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo 1.fdda182c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Frame 7.3924dc87.svg\";","module.exports = __webpack_public_path__ + \"static/media/Frame 1.307b098b.png\";","module.exports = __webpack_public_path__ + \"static/media/1129342 1.b65186d1.png\";","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            //props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_SERVER}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_SERVER}/logout`)\n        .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginPage.css\"\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  // const handleRememberMe = () => {\n  //   setRememberMe(!rememberMe)\n  // };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                console.log(response)\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/landingPage\");\n                window.location.reload();\n              } else {\n                setFormErrorMessage('Passwort oder E-Mail wurden nicht gefunden')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Passwort oder E-Mail wurden nicht gefunden')\n              setTimeout(() => {\n                setFormErrorMessage(\"Anfrage an Server fehlgeschlage! Internetverbindung prüfen\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n            <div className=\"div-backgroundBox\">\n              <div className=\"div-backgroundBox2\">\n\n              </div>\n            </div>\n            <Title className=\"title-loginPage\" level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} className=\"form-loginPage\">\n\n              <Form.Item required label=\"E-Mail\">\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\">\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label><p style={{color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px'}}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                {/* <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox> */}\n                {/* <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a> */}\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport \"./RegisterPage.css\"\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastName,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n            <div className=\"div-backgroundBox-register\">\n              <div className=\"div-backgroundBox2-register\">\n\n              </div>\n            </div>\n            <h2 className=\"title-loginPage\">Sign up</h2>\n            <Form style={{ minWidth: '350px'}} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nimport \"./Navbar.css\"\nimport { useSelector } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  const user = useSelector(state => state.user)\n\n  if (user.userData && user.userData.isAuth && user.userData.role === 1) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a id=\"route-link\" href=\"/\">Home</a>\n        </Menu.Item>\n        <Menu.Item key=\"archiv\">\n          <a id=\"route-link\" href=\"/landingPage\">Archiv</a>\n        </Menu.Item>\n        <SubMenu title={<span>Admin</span>}>\n          <MenuItemGroup title=\"Fotografien Verwalten:\">\n            <Menu.Item key=\"addFoto\" >\n              <a id=\"route-link\" href=\"/fotos/add\">Hinzufügen</a>\n            </Menu.Item>\n            <Menu.Item key=\"editFoto\" >\n              <a id=\"route-link\" href=\"/fotos/edit\">Bearbeiten</a>\n            </Menu.Item>\n          </MenuItemGroup>\n          <MenuItemGroup title=\"Benutzer Verwalten\">\n            <Menu.Item key=\"editUsers\" >\n              <a id=\"route-link\" href=\"/users/edit\">Rechtevergabe</a>\n            </Menu.Item>\n          </MenuItemGroup>\n        </SubMenu>\n      </Menu>\n    )\n  } else if (user.userData && user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a id=\"route-link\" href=\"/\">Home</a>\n        </Menu.Item>\n        <Menu.Item key=\"archiv\">\n          <a id=\"route-link\" href=\"/landingPage\">Archiv</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a id=\"route-link\" href=\"/\">Home</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport \"./Navbar.css\"\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\" id=\"route-link\">Anmelden</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\" id=\"route-link\">Registrieren</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Abmelden</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport logo from \"./../../ressources/logo 2.svg\"\nimport './Sections/Navbar.css';\nimport { OmitProps } from 'antd/lib/transfer/renderListBody';\n\nfunction NavBar(props) {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%',overflowX:\"hidden\", overflowY:\"hidden\", }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">\n          <div className=\"menue__logo_logo\" >\n            <img src={logo} style={{ width: \"140px\", height: \"140px\", padding: \"0px\" }}></img>\n          </div>\n        </a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" className=\"burger-icon\" />\n        </Button>\n        <Drawer\n          title=\"Foto Archiv\"\n          placement=\"left\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n          drawerStyle={{ color: \"blue\" }}\n          theme=\"dark\"\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            width: \"100vw\", height: '70px', display: 'flex',\n            flexDirection: 'row', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem', backgroundColor:\"black\", color:\"white\"\n        }}>\n           <p> Foto Archiv </p>\n           <Icon type=\"copyright\" style={{position:\"relative\", top:\"-7px\", right:\"-5px\"}}/>\n        </div>\n    )\n}\n\nexport default Footer\n","//export const USER_IP = \"192.168.1.66\";\r\nexport const USER_IP = \"localhost\";\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./LandingPage.css\"\r\nimport { Card, CardTitle, CardImg, CardBody, Row, Col } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Input, Button, Checkbox, Select } from 'antd';\r\nimport DownOutlined from '@ant-design/icons/DownOutlined';\r\nimport UpOutlined from '@ant-design/icons/UpOutlined';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Collapsible from 'react-collapsible';\r\nimport { USER_IP } from '../../IPConfig';\r\n\r\nfunction LandingPage(props) {\r\n    const [fotos, setFotos] = useState([]);\r\n    const [loadingValue, setLoadingValue] = useState(false);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [onCollapseValue, setOnCollapseValue] = useState(false);\r\n    const [filterCopyrightSource, setFilterCopyrightSource] = useState(true);\r\n    const [filterAuthor, setFilterAuthor] = useState(true);\r\n    const [filtercreationDate, setFiltercreationDate] = useState(true);\r\n    const [filterTitle, setFilterTitle] = useState(true);\r\n    const [filterImageMaterial, setFilterImageMaterial] = useState(true);\r\n    const [filterCountry, setFilterCountry] = useState(true);\r\n    const [filterCity, setFilterCity] = useState(true);\r\n    const [filterAll, setfilterAll] = useState(true);\r\n    const [filterDescription, setfilterDescription] = useState(true);\r\n    const [mainTagValue, setMainTagValue] = useState('unspecified');\r\n\r\n    useEffect(() => {\r\n        getAllFotos();\r\n    }, []);\r\n\r\n    function getAllFotos() {\r\n        Axios.post(\"/api/fotos/allFotos\")\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //alert(\"nice!\");\r\n                    console.log(response.data.fotos);\r\n                    setFotos(response.data.fotos);\r\n                    if (response.data.fotos.length === 0) {\r\n                        //setDisplayedTextValue(\"Keine Einträge gefunden!\");\r\n                        notifyError(\"Keine Einträge gefunden!\");\r\n                    }\r\n                } else if (response.data.error) {\r\n                    notifyError(\"Hinzufügen fehlgeschlagen!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Anmelden um Fotgrafien einzusehen!\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSearch = value => {\r\n        // console.log(filterCopyrightSource)\r\n        // console.log(filterAuthor)\r\n        // console.log(filtercreationDate)\r\n        // console.log(filterTitle)\r\n        // console.log(filterImageMaterial)\r\n        // console.log(filterCountry)\r\n        // console.log(filterCity)\r\n        var mainTag = mainTagValue;\r\n        if (mainTagValue === \"unspecified\") {\r\n            mainTag = \"false\";\r\n        }\r\n\r\n        const dataToSubmit = {\r\n            searched: value,\r\n            filterCopyrightSource: filterCopyrightSource,\r\n            filterAuthor: filterAuthor,\r\n            filtercreationDate: filtercreationDate,\r\n            filterTitle: filterTitle,\r\n            filterImageMaterial: filterImageMaterial,\r\n            filterCountry: filterCountry,\r\n            filterCity: filterCity,\r\n            mainTag: mainTag,\r\n            filterDescription: filterDescription\r\n        }\r\n        setLoadingValue(true);\r\n\r\n        Axios.post(\"/api/fotos/searchFotos\", dataToSubmit)\r\n            .then(response => {\r\n                setLoadingValue(false);\r\n                if (response.data.success) {\r\n                    //alert(\"nice!\");\r\n                    //console.log(response.data.fotos);\r\n                    setFotos(response.data.fotos);\r\n                    if (response.data.fotos.length === 0) {\r\n                        //setDisplayedTextValue(\"Keine Einträge gefunden!\");\r\n                        notifyError(\"Keine Einträge gefunden!\");\r\n                    }\r\n                } else {\r\n                    if (response.data.error) {\r\n                        notifyError(\"Fehler: \" + response.data.error.code);\r\n                    } else {\r\n                        //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                        notifyError(\"Anmelden um Fotgrafien einzusehen!\")\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    function handleChangeSearchValue(event) {\r\n        //console.log(event.target.value);\r\n        if (event.target.value === \"\") {\r\n            getAllFotos();\r\n        }\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    function handleOnCollapseValue() {\r\n        setOnCollapseValue(!onCollapseValue);\r\n    }\r\n\r\n    function handleChangefilterCopyrightSource() {\r\n        setFilterCopyrightSource(!filterCopyrightSource);\r\n    }\r\n\r\n    function handleChangefilterAuthor() {\r\n        setFilterAuthor(!filterAuthor);\r\n    }\r\n\r\n    function handleChangefiltercreationDate() {\r\n        setFiltercreationDate(!filtercreationDate);\r\n    }\r\n\r\n    function handleChangefilterTitle() {\r\n        setFilterTitle(!filterTitle);\r\n    }\r\n\r\n    function handleChangefilterImageMaterial() {\r\n        setFilterImageMaterial(!filterImageMaterial);\r\n    }\r\n\r\n    function handleChangefilterCountry() {\r\n        setFilterCountry(!filterCountry);\r\n    }\r\n\r\n    function handleChangefilterCity() {\r\n        setFilterCity(!filterCity);\r\n    }\r\n\r\n    function handleChangeFilterDescription() {\r\n        setfilterDescription(!filterDescription);\r\n    }\r\n\r\n    function handleChangefiltefilterAll() {\r\n        setFilterCopyrightSource(!filterAll);\r\n        setFilterAuthor(!filterAll);\r\n        setfilterAll(!filterAll);\r\n        setFilterCity(!filterAll);\r\n        setFilterCountry(!filterAll);\r\n        setFilterImageMaterial(!filterAll);\r\n        setFiltercreationDate(!filterAll);\r\n        setFilterTitle(!filterAll);\r\n        setfilterDescription(!filterAll);\r\n    }\r\n\r\n    function handleChangeMainTag(value) {\r\n        setMainTagValue(value);\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });;\r\n\r\n    const fotoCards = fotos.map((foto, index) => {\r\n        return (\r\n            <Col key={index} xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"2\" xxl=\"1\" className=\"card-col\">\r\n\r\n                <Link to={{\r\n                    pathname: \"/fotos/view/\" + foto._id,\r\n                    params: fotos,\r\n                    indexValue: index,\r\n                    exact: true,\r\n                    strict: true\r\n                }}\r\n                    style={{ textDecoration: 'none' }}\r\n                >\r\n                    <Card id=\"card-fotodisplay\">\r\n                        <CardBody className=\"cardBody-landingPage\">\r\n                            <div className=\"div-landingPage-titlebutton\">\r\n                                <CardTitle tag=\"h5\" className=\"card-text\">{foto.title}</CardTitle>\r\n                            </div>\r\n                        </CardBody>\r\n                        <div id=\"card-img-div\">\r\n                            <CardImg id=\"card-img\" src={\"https://\"+USER_IP+\":5000/\" + foto.compressedImage} alt=\"Card image cap\" />\r\n                        </div>\r\n                        <div style={{color:\"rgb(219, 219, 219)\"}} className=\"card-description card-text\">\r\n                            {foto.description}\r\n                        </div>\r\n                    </Card>\r\n                </Link>\r\n            </Col >\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"div-landingPage-main\">\r\n            <div className=\"Searchbar-landingPage\">\r\n                <Input.Search\r\n                    placeholder=\"Nach Fotografien Suchen...\"\r\n                    allowClear\r\n                    enterButton=\"Suchen\"\r\n                    loading={loadingValue}\r\n                    size=\"large\"\r\n                    onSearch={onSearch}\r\n                    value={searchValue}\r\n                    onChange={handleChangeSearchValue}\r\n                />\r\n            </div>\r\n            <div className=\"div-collapsible-landingPage\">\r\n                <Collapsible\r\n                    className=\"collapsible-landingPage\"\r\n                    trigger={\r\n                        <Button className=\"button-landingPage-collapsible\" onClick={() => handleOnCollapseValue()}>\r\n                            {onCollapseValue === false ?\r\n                                <DownOutlined className=\"p-landingPage-collappsiblebutton\"></DownOutlined>\r\n                                :\r\n                                <UpOutlined className=\"p-landingPage-collappsiblebutton\"></UpOutlined>\r\n                            }\r\n                            <p className=\"p-landingPage-collappsiblebutton\">Suchfilter</p>\r\n                        </Button>\r\n                    }>\r\n                    <div className=\"div-landingPage-filtermain\">\r\n                        <div className=\"div-landingpage-checkboxes\">\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <p style={{ fontWeight: \"bolder\" }} className=\"p-landingPage-checkboxName\">Personalisierte Suche:</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterAll} onClick={() => handleChangefiltefilterAll()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Alle Auswählen</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCopyrightSource} onClick={() => handleChangefilterCopyrightSource()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Urheber der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterAuthor} onClick={() => handleChangefilterAuthor()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Besiter der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filtercreationDate} onClick={() => handleChangefiltercreationDate()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Aufnahme Datum</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterTitle} onClick={() => handleChangefilterTitle()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Titel der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterImageMaterial} onClick={() => handleChangefilterImageMaterial()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Bildmaterial</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCountry} onClick={() => handleChangefilterCountry()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Land</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCity} onClick={() => handleChangefilterCity()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Stadt/Dorf</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterDescription} onClick={() => handleChangeFilterDescription()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Beschreibung</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"select-landingPage-mainTag\">\r\n                            <Select\r\n                                onChange={handleChangeMainTag}\r\n                                defaultValue={mainTagValue}\r\n                                className=\"selection-landingpage\"\r\n                            >\r\n                                <Select.Option\r\n                                    value=\"unspecified\"\r\n                                >Beliebige Kategorie</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"building\"\r\n                                >Gebäude</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"object\"\r\n                                >Gegenstand</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"human\"\r\n                                >Mensch</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"location\"\r\n                                >Ortschaft</Select.Option>\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                </Collapsible>\r\n            </div>\r\n\r\n            <ToastContainer />\r\n            {\r\n                fotos.length === 0 ?\r\n                    <div className=\"div-landingPage-displayedText\">\r\n                    </div> :\r\n                    <Row className=\"card-row\">\r\n                        {fotoCards}\r\n                    </Row>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState, useEffect } from 'react'\nimport Dropzone from \"react-dropzone\"\nimport { Icon } from \"antd\"\nimport \"./FileUpload.css\"\nimport Axios from \"axios\"\nimport { USER_IP } from '../IPConfig'\n\n\nfunction FileUpload(props) {\n\n    const [images, setImages] = useState([]);\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: { \"content-type\": \"multipart/form-data\" }\n        }\n        formData.append(\"file\", files[0])\n\n        //save the Image\n        Axios.post(\"/api/fotos/uploadImage\", formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    //console.log(response.data.image)\n                    setImages([...images, response.data.image])\n                    props.refreshFunction([...images, response.data.image])\n                } else {\n                    alert(\"Failed to save the Image\")\n                }\n            })\n    }\n\n    const onDelete = (image) => {\n        const currentIndex = images.indexOf(image);\n        let newImages = [...images]\n        newImages.splice(currentIndex, 1)\n        setImages(newImages);\n        props.refreshFunction(newImages);\n        const dataToSubmit ={\n            image: image\n        }\n        Axios.post(\"/api/fotos/deleteImage\", dataToSubmit)\n            .then(response => {\n                if (response.data.success) {\n                    //console.log(response.data.image)\n                    //console.log(\"deleted\")\n                } else {\n                    //alert(\"Failed to delete the Image\")\n                }\n            })\n    }\n\n    useEffect(() => {\n        //console.log(props.defaultImage)\n        if(props.defaultImage){\n            setImages([props.defaultImage])\n            props.refreshFunction([props.defaultImage])\n        }\n    }, [props.defaultImage]);\n\n    return (\n        <div className=\"div-main\">\n            <Dropzone\n                onDrop={onDrop}\n                multiple={false}\n                maxSize={800000000}\n                className=\"dropzone-fileUpload\"\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div className=\"div-dropzone\"\n                        {...getRootProps()}\n                    >\n                        {/* {console.log('getRootProps', { ...getRootProps() })}\n                        {console.log('getInputProps', { ...getInputProps() })} */}\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div className=\"div-fileUpload-displayPicture\">\n                <div className=\"div-displayImage\">\n                    {images.map((image, index) => (\n                        <div key={index} onClick={() => onDelete(image)}>\n                            <img className=\"img-images\" src={`https://` + USER_IP+`:5000/${image}`} alt={`productImg-${index}`}></img>\n                        </div>\n                    ))}\n                </div>\n                <label className=\"label-fileUpload\">(Bildvorschau)</label>\n            </div>\n        </div>\n    )\n}\n\n\nexport default FileUpload\n\n\n/*import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\nimport \"./FileUpload.css\"\n\nfunction FileUpload(props) {\n\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        formData.append(\"file\", files[0])\n        //save the Image we chose inside the Node Server\n        Axios.post('/api/fotos/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    setImages([...Images, response.data.image])\n                    props.refreshFunction([...Images, response.data.image])\n                } else {\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n\n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n        <div className=\"div-main\">\n            <Dropzone\n                onDrop={onDrop}\n                multiple={false}\n                maxSize={800000000}\n                className=\"div-dropzone\"\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{\n                        width: '300px', height: '240px', border: '1px solid lightgray',\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\n                    }}\n                        {...getRootProps()}\n                    >\n                        {console.log('getRootProps', { ...getRootProps() })}\n                        {console.log('getInputProps', { ...getInputProps() })}\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n\n                {Images.map((image, index) => (\n                    <div onClick={() => onDelete(image)}>\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`http://localhost:5000/${image}`} alt={`productImg-${index}`} />\n                    </div>\n                ))}\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default FileUpload\n*/\n","import React, { useState, useEffect } from 'react'\r\nimport FileUpload from \"../../utils/FileUpload\"\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Switch, DatePicker, Select, Typography } from 'antd';\r\nimport CopyrightOutlined from '@ant-design/icons/CopyrightOutlined';\r\nimport UserOutlined from '@ant-design/icons/UserOutlined';\r\nimport EditOutlined from '@ant-design/icons/EditOutlined';\r\nimport CompassOutlined from '@ant-design/icons/CompassOutlined';\r\nimport PlusOutlined from '@ant-design/icons/PlusOutlined';\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./FotoAddingPage.css\"\r\nimport \"./DropAndDragTags.css\"\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction FotoAddingPage(props) {\r\n    const [originalImage, setOriginalImage] = useState([]);\r\n    const [compressedImage, setCompressedImage] = useState([]);\r\n    const [mainTagValue, setMainTagValue] = useState('human');\r\n    const [imageMaterialValue, setImageMaterialValue] = useState('fotografie');\r\n    const [creationDateValue, setCreationDateValue] = useState(moment());\r\n    const [authorValue, setAuthorValue] = useState(\"\");\r\n    const [copyrightSourceValue, setCopyrightSourceValue] = useState(\"\");\r\n    const [copyrightSourceIsAuthor, setCopyrightSourceIsAuthor] = useState(false);\r\n    const [newTagValue, setNewTagValue] = useState(\"\");\r\n    const [tags, setTags] = useState([\r\n    ]);\r\n    const [suggestions, setSuggestions] = useState([\r\n        {\r\n            id: \"0\",\r\n            text: \"Bauernhof\"\r\n        },\r\n        {\r\n            id: \"1\",\r\n            text: \"Kirche\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            text: \"Gasthof\"\r\n        }\r\n    ]);\r\n\r\n\r\n    const KeyCodes = {\r\n        comma: 188,\r\n        enter: 13,\r\n    };\r\n\r\n    const delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\n    const updateOriginalImage = (newImages) => {\r\n        //console.log(newImages)\r\n        setOriginalImage(newImages)\r\n    }\r\n\r\n    const updateCompressedImage = (newImages) => {\r\n        //console.log(newImages)\r\n        setCompressedImage(newImages)\r\n    }\r\n\r\n    function handleChangeMainTag(value) {\r\n        //console.log(`selected ${value}`);\r\n        setMainTagValue(value);\r\n    }\r\n\r\n    function handleImageMaterial(value) {\r\n        //console.log(`selected ${value}`);\r\n        setImageMaterialValue(value);\r\n    }\r\n\r\n    function handleChangeCreationDate(date, dateString) {\r\n        //console.log(date + dateString);\r\n        setCreationDateValue(dateString);\r\n    }\r\n\r\n    function handleChangeCopyrightSourceIsAuthor() {\r\n        if (copyrightSourceIsAuthor === false) {\r\n            setAuthorValue(copyrightSourceValue);\r\n        }\r\n        if (copyrightSourceIsAuthor === true) {\r\n            setAuthorValue(\"\");\r\n        }\r\n        setCopyrightSourceIsAuthor(!copyrightSourceIsAuthor);\r\n    }\r\n\r\n    function handleChangeAuthor(event) {\r\n        setAuthorValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeAddTag(event) {\r\n        setNewTagValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeCopyrightSource(event) {\r\n        //console.log(copyrightSourceIsAuthor)\r\n        if (copyrightSourceIsAuthor === true) {\r\n            setAuthorValue(copyrightSourceValue);\r\n        }\r\n        setCopyrightSourceValue(event.target.value);\r\n    }\r\n\r\n    function handleDeleteTags(i) {\r\n        setTags(tags.filter((tag, index) => index !== i));\r\n    }\r\n\r\n    function handleAdditionTags(tag) {\r\n        if (suggestions.find(element => element.text === tag.text)) {\r\n            setTags([...tags, tag])\r\n        }\r\n    }\r\n\r\n    function handleDragTags(tag, currPos, newPos) {\r\n        const newTags = tags.slice();\r\n\r\n        newTags.splice(currPos, 1);\r\n        newTags.splice(newPos, 0, tag);\r\n\r\n        // re-render\r\n        setTags(newTags);\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });;\r\n\r\n    const notify = (text) => toast.success(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        onClose: () => props.history.push(\"/landingPage\")\r\n    });\r\n\r\n    function handleSaveNewTag() {\r\n        const dataToSubmit = {\r\n            name: newTagValue\r\n        }\r\n        const newTagName = newTagValue;\r\n        setNewTagValue(\"\");\r\n\r\n        Axios.post(\"/api/fotos/addTag\", dataToSubmit)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.tagid[1][0]._id)\r\n                    setTags([...tags, { id: response.data.tagid[1][0]._id + \"\", text: newTagName }])\r\n                    setSuggestions([...suggestions, { id: response.data.tagid[1][0]._id + \"\", text: newTagName }])\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Kategorien konnten hinzugefügt werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        autoFill();\r\n        Axios.post(\"/api/fotos/allTags\")\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //alert(\"nice!\");\r\n                    //console.log(response.data.tags);\r\n                    var arrTags = []\r\n                    for (let i = 0; i < response.data.tags.length; i++) {\r\n                        arrTags.push({ id: response.data.tags[i]._id + \"\", text: response.data.tags[i].name });\r\n                        //console.log(response.data.tags[i]._id.toString() + \"  \" + response.data.tags[i].name )\r\n                    }\r\n                    setSuggestions(arrTags);\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Kategorien konnten nicht geladen werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    function autoFill(){\r\n       setCreationDateValue(\"1930-05-29\");\r\n        setAuthorValue(\"Hofer Franz\");\r\n        setCopyrightSourceValue(\"Niederkofler Johann\");\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                title: 'Primiz in St Johann',\r\n                description: 'Man sieht eine Reitergruppe der Schützen bei der Prozession, die anlässlich der Primiz von Gottfried Gruber \"Niederlechn\" stattfand.',\r\n                gpsLocation: '46.97995702530285, 11.939850793237095',\r\n                city: 'St. Johann',\r\n                country: 'Südtirol'\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                title: Yup.string()\r\n                    .required('Titel muss vorhanden sein'),\r\n                /*gpsLocation: Yup.string()\r\n                    .required('GPS-Location muss vorhanden sein'),*/\r\n                // author: Yup.string()\r\n                //     .required('Besitzer der Fotografie muss angegeben werden'),\r\n                // copyrightSource: Yup.string()\r\n                //     .required('Urheber der Fotografie muss angegeben werden')\r\n            })}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    /*let dataToSubmit = {\r\n                        email: values.email,\r\n                        password: values.password\r\n                    };*/\r\n\r\n                    let newDate = new Date()\r\n                    let date = newDate.getDate();\r\n                    let month = newDate.getMonth() + 1;\r\n                    let year = newDate.getFullYear();\r\n\r\n                    console.log(\"User         \" + props.user.userData._id)\r\n                    console.log(\"Author       \" + authorValue)\r\n                    console.log(\"copyright    \" + copyrightSourceValue)\r\n                    console.log(\"title        \" + values.title)\r\n                    console.log(\"maitag       \" + mainTagValue)\r\n                    console.log(\"creationdate \" + creationDateValue)\r\n                    //console.log(\"uploadedDAte \" + `${year}${\"-\"}${month < 10 ? `0${month}` : `${month}`}${\"-\"}${date}`);\r\n                    console.log(\"description  \" + values.description)\r\n                    console.log(\"originalimag \" + originalImage[0])\r\n                    console.log(\"compressedim \" + compressedImage[0])\r\n                    console.log(\"gps          \" + values.gpsLocation)\r\n                    console.log(\"city         \" + values.city)\r\n                    console.log(\"country      \" + values.country)\r\n                    console.log(\"imageMat     \" + imageMaterialValue)\r\n                    console.log(\"tags         \" + tags)\r\n                    //console.log(\"suggestion   \" + suggestions)\r\n\r\n                    let dataToSubmit = {\r\n                        _userid: props.user.userData._id,\r\n                        originalImage: originalImage[0],\r\n                        compressedImage: compressedImage[0],\r\n                        copyrightSource: copyrightSourceValue,\r\n                        author: authorValue,\r\n                        mainTag: mainTagValue,\r\n                        description: values.description,\r\n                        uploadDate: `${year}${\"-\"}${month < 10 ? `0${month}` : `${month}`}${\"-\"}${date}`,\r\n                        creationDate: creationDateValue,\r\n                        title: values.title,\r\n                        gpsLocation: values.gpsLocation,\r\n                        country: values.country,\r\n                        city: values.city,\r\n                        imageMaterial: imageMaterialValue,\r\n                        tags: tags\r\n                    }\r\n\r\n                    Axios.post(\"/api/fotos/uploadFoto\", dataToSubmit)\r\n                        .then(response => {\r\n                            if (response.data.success === true) {\r\n                                notify(\"Fotografie hinzugefügt!\");\r\n                                setSubmitting(false);\r\n                            } else {\r\n                                notifyError(\"Hinzufügen fehlgeschlagen!\");\r\n                                notifyError(\"Fehler: \" + response.data.error.code);\r\n                                setSubmitting(false);\r\n                            }\r\n                        })\r\n                }, 500);\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                } = props;\r\n                return (\r\n                    <div className=\"div-addingPage-main\">\r\n                        <div className=\"div-fotoAddingPage-Background\">\r\n                            <Title style={{ color: \"white\" }} level={2}>Fotografie hinzufügen</Title>\r\n                            <ToastContainer />\r\n                            <Form onSubmit={handleSubmit} className=\"form-fotoAddingPage\" >\r\n\r\n                                <label className=\"label-fotoAddingPage-titel\">Original Fotografie hochladen:</label>\r\n                                <FileUpload className=\"fileUpload-fotoAddingPage\" refreshFunction={updateOriginalImage}></FileUpload>\r\n\r\n                                <label className=\"label-fotoAddingPage-titel\">Komprimiertes Bild hochladen (*.jpg oder *.png):</label>\r\n                                <FileUpload className=\"fileUpload-fotoAddingPage\" refreshFunction={updateCompressedImage}></FileUpload>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Bildmaterial:</label>\r\n\r\n                                    <Select\r\n                                        onChange={handleImageMaterial}\r\n                                        defaultValue={imageMaterialValue}\r\n                                    >\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"negativ\"\r\n                                        >Negativ</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"negativ-glas\"\r\n                                        >Negativ-Glas</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"dia\"\r\n                                        >Dia</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"fotografie\"\r\n                                        >Fotografie</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"ansichtskarte\"\r\n                                        >Ansichtskarte</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"digital\"\r\n                                        >Digital</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"scan\"\r\n                                        >Scan</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required className=\"form-item-fotoAddingPage-authorInput\">\r\n                                    <div className=\"form-item-fotoAddingPage-divmain\">\r\n                                        <div className=\"form-item-fotoAddingPage-div1\">\r\n                                            <label className=\"label-fotoAddingPage-titel\">Urheber:</label>\r\n                                        </div>\r\n                                        <div className=\"form-item-fotoAddingPage-div2\">\r\n                                            <label className=\"label-fotoAddingPage-titel\">Urheber ist Besitzer:</label>\r\n                                            <Switch\r\n                                                value={copyrightSourceIsAuthor}\r\n                                                onChange={handleChangeCopyrightSourceIsAuthor}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Input\r\n                                        id=\"copyrightSource\"\r\n                                        prefix={<CopyrightOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Urheber der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={copyrightSourceValue}\r\n                                        onChange={handleChangeCopyrightSource}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.copyrightSource && touched.copyrightSource ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.copyrightSource && touched.copyrightSource && (\r\n                                        <div className=\"input-feedback\">{errors.copyrightSource}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required >\r\n                                    <label className=\"label-fotoAddingPage-titel\">Besitzer:</label>\r\n                                    <Input\r\n                                        id=\"author\"\r\n                                        disabled={copyrightSourceIsAuthor}\r\n                                        prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Besitzer der Fotografie (kann gleich sein wie Urheber)\"\r\n                                        type=\"text\"\r\n                                        value={authorValue}\r\n                                        onChange={handleChangeAuthor}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.author && touched.author ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.author && touched.author && (\r\n                                        <div className=\"input-feedback\">{errors.author}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Titel:</label>\r\n                                    <Input\r\n                                        id=\"title\"\r\n                                        prefix={<EditOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Titel der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={values.title}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        maxLength={255}\r\n                                        className={\r\n                                            errors.title && touched.title ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.title && touched.title && (\r\n                                        <div className=\"input-feedback\">{errors.title}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Bild Beschreibung:</label>\r\n                                    <Input.TextArea\r\n                                        id=\"description\"\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={values.description}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.description && touched.description ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.description && touched.description && (\r\n                                        <div className=\"input-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Haupt Zuordnung:</label>\r\n\r\n                                    <Select\r\n                                        onChange={handleChangeMainTag}\r\n                                        defaultValue={mainTagValue}\r\n                                    >\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"building\"\r\n                                        >Gebäude</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"object\"\r\n                                        >Gegenstand</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"human\"\r\n                                        >Mensch</Select.Option>\r\n                                        <Select.Option\r\n                                            className=\"option-fotoAddingPage\"\r\n                                            value=\"location\"\r\n                                        >Ortschaft</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Kategorie Zuordnung:</label>\r\n                                    <ReactTags\r\n                                        className=\"reactTages-fotoaddingPage-tags\"\r\n                                        tags={tags}\r\n                                        suggestions={suggestions}\r\n                                        handleDelete={handleDeleteTags}\r\n                                        handleAddition={handleAdditionTags}\r\n                                        handleDrag={handleDragTags}\r\n                                        delimiters={delimiters}\r\n                                        autofocus={false}\r\n                                        minQueryLength={0}\r\n                                        // minQueryLength={suggestions.length > 20 ? 2 : suggestions.length > 10 ? 1 : 0}\r\n                                        inline={false}\r\n                                        allowDeleteFromEmptyInput={false}\r\n                                        placeholder={\"Kategorie auswählen\"}\r\n                                    />\r\n                                    <label className=\"label-fotoAddingPage-titel\">Neue Kategorie Hinzufügen:</label>\r\n                                    <Input\r\n                                        id=\"tagadd\"\r\n                                        prefix={<PlusOutlined style={{ color: '#000 !important' }} />}\r\n                                        placeholder=\"Kategorie hinzufügen\"\r\n                                        type=\"text\"\r\n                                        value={newTagValue}\r\n                                        onChange={handleChangeAddTag}\r\n                                        onBlur={handleBlur}\r\n                                        maxLength={255}\r\n                                    />\r\n                                    <Button type=\"primary\" className=\"\" onClick={() => handleSaveNewTag()}>\r\n                                        Kategorie hinzufügen\r\n                                    </Button>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-item-fotoAddingPage-creationDate\">\r\n                                    <label className=\"label-fotoAddingPage-titel\">Erstell Datum der Fotografie:</label>\r\n                                    <div>\r\n                                        <DatePicker\r\n                                            onChange={handleChangeCreationDate}\r\n                                            className=\"datePicker-fotoAddingPage\"\r\n                                            value={moment(creationDateValue, 'YYYY-MM-DD')}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">GPS Location:</label>\r\n                                    <Input\r\n                                        id=\"gpsLocation\"\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={values.gpsLocation}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.gpsLocation && touched.gpsLocation ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.gpsLocation && touched.gpsLocation && (\r\n                                        <div className=\"input-feedback\">{errors.gpsLocation}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Stadt/Dorf:</label>\r\n                                    <Input\r\n                                        id=\"city\"\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={values.city}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.city && touched.city ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.city && touched.city && (\r\n                                        <div className=\"input-feedback\">{errors.city}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Land:</label>\r\n                                    <Input\r\n                                        id=\"country\"\r\n                                        style={{ color: \"blue\" }}\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={values.country}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.country && touched.country ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.country && touched.country && (\r\n                                        <div className=\"input-feedback\">{errors.country}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <div>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                                            Fotografie Speichern\r\n                                        </Button>\r\n                                    </div>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n\r\n                            {/* <button style={{width:\"100px\", height:\"100px\"}} onClick={()=>autoFill()} /> */}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default FotoAddingPage","import React, { useState, useEffect, useRef } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport {USER_IP} from \"./../../IPConfig\";\r\nimport {\r\n  Typography,\r\n  Input\r\n} from 'antd';\r\n\r\nimport \"./ViewingPage.css\"\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction ViewingPage(props) {\r\n  const [fotos, setFotos] = useState([]);\r\n  const [fotoData, setFotoData] = useState([]);\r\n  const [startIndexValue, setStartIndexValue] = useState(0);\r\n  const refImg = useRef(0);\r\n  const [descriptionValue, setDescriptionValue] = useState(\"\");\r\n  const [titleValue, settitleValue] = useState(\"\");\r\n  const [copyrightSourceValue, setcopyrightSourceValue] = useState(\"\");\r\n  const [authorValue, setauthorValue] = useState(\"\");\r\n  const [creationDate, setcreationDateValue] = useState(\"\");\r\n  const [coutnryValue, setcoutnryValue] = useState(\"\");\r\n  const [cityValue, setcityValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.location.params == null) {\r\n      /*RELOAD*/\r\n      //have to request again to get data from mysql\r\n      //props.match.params.id\r\n      //also on landing page overgive search options to search again for every picture\r\n      props.history.push(\"/landingPage\")\r\n      return\r\n    }\r\n    var arrFotos = []\r\n    for (let i = 0; i < props.location.params.length; i++) {\r\n      arrFotos.push({ \"original\": \"https://\"+USER_IP+\":5000/\" + props.location.params[i].compressedImage, \"thumbnail\": \"https://\"+USER_IP+\":5000/\" + props.location.params[i].compressedImage, \"thumbnailTitle\": props.location.params[i].title });\r\n      //console.log(props.location.params[i].compressedImage)\r\n    }\r\n    setFotos(arrFotos);\r\n    setFotoData(props.location.params);\r\n    setStartIndexValue(props.location.indexValue);\r\n\r\n    setDescriptionValue(props.location.params[props.location.indexValue].description);\r\n    settitleValue(props.location.params[props.location.indexValue].title);\r\n    setcityValue(props.location.params[props.location.indexValue].city);\r\n    setcopyrightSourceValue(props.location.params[props.location.indexValue].copyrightSource);\r\n    setcoutnryValue(props.location.params[props.location.indexValue].country);\r\n    var d = new Date(props.location.params[props.location.indexValue].creationDate);\r\n    setcreationDateValue(d.toDateString());\r\n    setauthorValue(props.location.params[props.location.indexValue].author);\r\n  }, []);\r\n\r\n  function handleSlide(index) {\r\n    setDescriptionValue(fotoData[index].description);\r\n    settitleValue(fotoData[index].title);\r\n    setcityValue(fotoData[index].city);\r\n    setcopyrightSourceValue(fotoData[index].copyrightSource);\r\n    setcoutnryValue(fotoData[index].country);\r\n    var d = new Date(fotoData[index].creationDate);\r\n    setcreationDateValue(d.toDateString());\r\n    setauthorValue(fotoData[index].author);\r\n  }\r\n\r\n  return (\r\n    <div className=\"div-vieingPage-main\">\r\n      <div className=\"div-backgroundBox-viewingPage\">\r\n        <div className=\"div-backgroundBox2-viewingPage\">\r\n          <div className=\"div-viewingPage-main-title\">\r\n            <Title className=\"title-viewingPage-main\" level={2}>Bilder Galerie</Title>\r\n            <Title className=\"title-viewingPage-title\" level={4}>{titleValue}</Title>\r\n          </div>\r\n\r\n          <ImageGallery\r\n            className=\"imageGallery-viewingPage\"\r\n            ref={refImg}\r\n            items={fotos}\r\n            startIndex={startIndexValue}\r\n            thumbnailPosition=\"left\"\r\n            showBullets={true}\r\n            showIndex={true}\r\n            onSlide={handleSlide}\r\n            // lazyLoad={true}\r\n          />\r\n\r\n          <div className=\"div-viewingPage-description\">\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Beschreibung</label>\r\n            <label style={{whiteSpace:\"pre-wrap\"}} className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {descriptionValue}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Urheber</label>\r\n            <label className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {copyrightSourceValue}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Besitzer</label>\r\n            <label className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {authorValue}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Datum</label>\r\n            <label className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {creationDate}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Land</label>\r\n            <label className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {coutnryValue}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n\r\n            <label className=\"input-viewingPage-all title-viewinpage-smaller\">Stadt/Dorf</label>\r\n            <label className=\"input-viewingPage-all label-viewingpage-display\">\r\n              {cityValue}\r\n            </label>\r\n            <div className=\"div-viewingPage-line\"></div>\r\n          </div>\r\n\r\n          {/* <button onClick={() => console.log(refImg.current.getCurrentIndex())}>kjhlkkj</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewingPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Axios from 'axios';\r\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport \"./UserManagePage.css\";\r\n\r\n\r\nfunction UserManagePage(props) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.post(\"/api/users/getAllUsers\")\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setUsers(response.data.users);\r\n                    //console.log(response.data.users);\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Kategorien konnten hinzugefügt werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    function edtiSingleUser(_id, role) {\r\n        const dataToSubmit = {\r\n            role: role,\r\n            _id: _id\r\n        }\r\n        Axios.post(\"/api/users/editSingle\", dataToSubmit)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    notify(\"Benutzer erfolgreich aktualisiert!\");\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Kategorien konnten hinzugefügt werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });;\r\n\r\n    const notify = (text) => toast.success(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n\r\n    const userCards = users.map((user, index) => {\r\n        return (\r\n            <Col key={index} xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"2\" xxl=\"1\" className=\"card-col\">\r\n                <Card className=\"card-fotodisplay-usermanagePage\">\r\n                    <CardBody className=\"cardBody-landingPage\">\r\n                        <CardTitle tag=\"h5\" className=\"card-text\">{user.email}</CardTitle>\r\n                    </CardBody>\r\n                    <CardText>\r\n                        <label className=\"label-usermanagePage-admin\">Administrator</label>\r\n                    </CardText>\r\n                    <Switch onChange={()=>edtiSingleUser(user._id, user.role)} className=\"switch-usermanagePage\" defaultChecked={user.role === 1 ? true : false} color=\"secondary\">\r\n\r\n                    </Switch>\r\n                </Card>\r\n            </Col >\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"div-userManagePage-main\">\r\n            <ToastContainer />\r\n            <Row className=\"card-row\">\r\n                {userCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserManagePage\r\n","import React, { useState, useEffect } from 'react'\r\nimport FileUpload from \"../../utils/FileUpload\"\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, Button, Switch, DatePicker, Select, Typography } from 'antd';\r\nimport CopyrightOutlined from '@ant-design/icons/CopyrightOutlined';\r\nimport UserOutlined from '@ant-design/icons/UserOutlined';\r\nimport EditOutlined from '@ant-design/icons/EditOutlined';\r\nimport CompassOutlined from '@ant-design/icons/CompassOutlined';\r\nimport PlusOutlined from '@ant-design/icons/PlusOutlined';\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\nimport Axios from 'axios';\r\nimport moment from \"moment\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./FotoEditingPage.css\"\r\nimport \"./DropAndDragTags.css\"\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction FotoAddingPage(props) {\r\n    const [originalImage, setOriginalImage] = useState([]);\r\n    const [originalImageInitial, setOriginalImageInitial] = useState([]);\r\n    const [compressedImage, setCompressedImage] = useState([]);\r\n    const [compressedImageInitial, setCompressedImageInitial] = useState([]);\r\n    const [mainTagValue, setMainTagValue] = useState('');\r\n    const [imageMaterialValue, setImageMaterialValue] = useState('');\r\n    const [creationDateValue, setCreationDateValue] = useState(moment());\r\n    const [authorValue, setAuthorValue] = useState(\"\");\r\n    const [copyrightSourceValue, setCopyrightSourceValue] = useState(\"\");\r\n    const [titleValue, settitleValue] = useState(\"\");\r\n    const [descriptionValue, setdescriptionValue] = useState(\"\");\r\n    const [locationValue, setlocationValue] = useState(\"\");\r\n    const [cityValue, setcityValue] = useState(\"\");\r\n    const [countryValue, setcountryValue] = useState(\"\");\r\n    const [copyrightSourceIsAuthor, setCopyrightSourceIsAuthor] = useState(false);\r\n    const [newTagValue, setNewTagValue] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    const KeyCodes = {\r\n        comma: 188,\r\n        enter: 13,\r\n    };\r\n\r\n    const delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\n    const updateOriginalImage = (newImages) => {\r\n        //console.log(newImages)\r\n        setOriginalImage(newImages)\r\n    }\r\n\r\n    const updateCompressedImage = (newImages) => {\r\n        //console.log(newImages)\r\n        setCompressedImage(newImages)\r\n    }\r\n\r\n    function handleChangeMainTag(value) {\r\n        //console.log(`selected ${value}`);\r\n        setMainTagValue(value);\r\n    }\r\n\r\n    function handleImageMaterial(value) {\r\n        //console.log(`selected ${value}`);\r\n        setImageMaterialValue(value);\r\n    }\r\n\r\n    function handleChangeCreationDate(date, dateString) {\r\n        //console.log(date + dateString);\r\n        setCreationDateValue(dateString);\r\n    }\r\n\r\n    function handleChangeCopyrightSourceIsAuthor() {\r\n        if (copyrightSourceIsAuthor === false) {\r\n            setAuthorValue(copyrightSourceValue);\r\n        }\r\n        if (copyrightSourceIsAuthor === true) {\r\n            setAuthorValue(\"\");\r\n        }\r\n        setCopyrightSourceIsAuthor(!copyrightSourceIsAuthor);\r\n    }\r\n\r\n    function handleChangeAuthor(event) {\r\n        setAuthorValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeAddTag(event) {\r\n        setNewTagValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeCopyrightSource(event) {\r\n        //console.log(copyrightSourceIsAuthor)\r\n        if (copyrightSourceIsAuthor === true) {\r\n            setAuthorValue(copyrightSourceValue);\r\n        }\r\n        setCopyrightSourceValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeTitle(event) {\r\n        settitleValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(event) {\r\n        setdescriptionValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeCity(event) {\r\n        setcityValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeCountry(event) {\r\n        setcountryValue(event.target.value);\r\n    }\r\n\r\n    function handleChangeLocation(event) {\r\n        setlocationValue(event.target.value);\r\n    }\r\n\r\n    function handleDeleteTags(i) {\r\n        setTags(tags.filter((tag, index) => index !== i));\r\n    }\r\n\r\n    function handleAdditionTags(tag) {\r\n        if (suggestions.find(element => element.text === tag.text)) {\r\n            setTags([...tags, tag])\r\n        }\r\n    }\r\n\r\n    function handleDragTags(tag, currPos, newPos) {\r\n        const newTags = tags.slice();\r\n\r\n        newTags.splice(currPos, 1);\r\n        newTags.splice(newPos, 0, tag);\r\n\r\n        // re-render\r\n        setTags(newTags);\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });;\r\n\r\n    const notify = (text) => toast.success(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        onClose: () => props.history.push(\"/landingPage\")\r\n    });\r\n\r\n    function handleSaveNewTag() {\r\n        const dataToSubmit = {\r\n            name: newTagValue\r\n        }\r\n        const newTagName = newTagValue;\r\n        setNewTagValue(\"\");\r\n\r\n        Axios.post(\"/api/fotos/addTag\", dataToSubmit)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.tagid[1][0]._id)\r\n                    setTags([...tags, { id: response.data.tagid[1][0]._id + \"\", text: newTagName }])\r\n                    setSuggestions([...suggestions, { id: response.data.tagid[1][0]._id + \"\", text: newTagName }])\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Kategorien konnten hinzugefügt werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const dataToSubmit = {\r\n            _id: props.match.params.id\r\n        }\r\n        Axios.post(\"/api/fotos/getFotoById\", dataToSubmit)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    const fotoData = response.data.fotoData[0];\r\n                    //console.log(fotoData)\r\n                    //console.log(fotoData.originalImage);\r\n                    //console.log(fotoData.compressedImage);\r\n                    //setOriginalImage(fotoData.originalImage);\r\n                    //setCompressedImage(fotoData.compressedImage);\r\n                    setOriginalImageInitial(fotoData.originalImage);\r\n                    setCompressedImageInitial(fotoData.compressedImage);\r\n                    setMainTagValue(fotoData.mainTag);\r\n                    setImageMaterialValue(fotoData.imageMaterial);\r\n                    setCreationDateValue(moment(fotoData.creationDate, 'YYYY-MM-DD'));\r\n                    setAuthorValue(fotoData.author);\r\n                    setCopyrightSourceValue(fotoData.copyrightSource);\r\n                    settitleValue(fotoData.title);\r\n                    setdescriptionValue(fotoData.description);\r\n                    setcityValue(fotoData.city);\r\n                    setcountryValue(fotoData.country);\r\n                    setlocationValue(fotoData.gpsLocation);\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Daten konnten nicht geladen werden!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n\r\n                    let newDate = new Date()\r\n                    let date = newDate.getDate();\r\n                    let month = newDate.getMonth() + 1;\r\n                    let year = newDate.getFullYear();\r\n\r\n                    console.log(\"User         \" + props.user.userData._id)\r\n                    console.log(\"Author       \" + authorValue)\r\n                    console.log(\"copyright    \" + copyrightSourceValue)\r\n                    console.log(\"title        \" + titleValue)\r\n                    console.log(\"maitag       \" + mainTagValue)\r\n                    console.log(\"creationdate \" + creationDateValue)\r\n                    //console.log(\"uploadedDAte \" + `${year}${\"-\"}${month < 10 ? `0${month}` : `${month}`}${\"-\"}${date}`);\r\n                    console.log(\"description  \" + descriptionValue)\r\n                    console.log(\"originalimag \" + originalImage[0])\r\n                    console.log(\"compressedim \" + compressedImage[0])\r\n                    console.log(\"gps          \" + locationValue)\r\n                    console.log(\"city         \" + cityValue)\r\n                    console.log(\"country      \" + countryValue)\r\n                    console.log(\"imageMat     \" + imageMaterialValue)\r\n                    console.log(\"tags         \" + tags)\r\n                    console.log(\"id           \" + props.match.params.id)\r\n                    //console.log(\"suggestion   \" + suggestions)\r\n\r\n                    let dataToSubmit = {\r\n                        _id: props.match.params.id,\r\n                        originalImage: originalImage[0],\r\n                        compressedImage: compressedImage[0],\r\n                        copyrightSource: copyrightSourceValue,\r\n                        author: authorValue,\r\n                        mainTag: mainTagValue,\r\n                        description: descriptionValue,\r\n                        uploadDate: `${year}${\"-\"}${month < 10 ? `0${month}` : `${month}`}${\"-\"}${date}`,\r\n                        creationDate: creationDateValue,\r\n                        title: titleValue,\r\n                        gpsLocation: locationValue,\r\n                        country: countryValue,\r\n                        city: cityValue,\r\n                        imageMaterial: imageMaterialValue,\r\n                        tags: tags\r\n                    }\r\n\r\n                    Axios.post(\"/api/fotos/updatePicture\", dataToSubmit)\r\n                        .then(response => {\r\n                            if (response.data.success === true) {\r\n                                notify(\"Änderung gespeichert!\");\r\n                                setSubmitting(false);\r\n                            } else {\r\n                                notifyError(\"Speichern fehlgeschlagen!\");\r\n                                notifyError(\"Fehler: \" + response.data.error.code);\r\n                                setSubmitting(false);\r\n                            }\r\n                        })\r\n                }, 1000);\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                } = props;\r\n                return (\r\n                    <div className=\"div-addingPage-main\">\r\n                        <div className=\"div-fotoAddingPage-Background\">\r\n                            <Title style={{color:\"white\"}} level={2}>Fotografie bearbeiten</Title>\r\n                            <ToastContainer />\r\n                            <Form onSubmit={handleSubmit} className=\"form-fotoAddingPage\" >\r\n\r\n                                <label className=\"label-fotoAddingPage-titel\">Original Fotografie hochladen:</label>\r\n                                <FileUpload className=\"fileUpload-fotoAddingPage\" refreshFunction={updateOriginalImage} defaultImage={originalImageInitial}></FileUpload>\r\n\r\n                                <label className=\"label-fotoAddingPage-titel\">Komprimiertes Bild hochladen (*.jpg oder *.png):</label>\r\n                                <FileUpload className=\"fileUpload-fotoAddingPage\" refreshFunction={updateCompressedImage} defaultImage={compressedImageInitial}></FileUpload>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Bildmaterial:</label>\r\n\r\n                                    <Select\r\n                                        onChange={handleImageMaterial}\r\n                                        value={imageMaterialValue}\r\n                                    >\r\n                                        <Select.Option\r\n                                            value=\"negativ\"\r\n                                        >Negativ</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"negativ-glas\"\r\n                                        >Negativ-Glas</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"dia\"\r\n                                        >Dia</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"fotografie\"\r\n                                        >Fotografie</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"ansichtskarte\"\r\n                                        >Ansichtskarte</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"digital\"\r\n                                        >Digital</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"scan\"\r\n                                        >Scan</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required className=\"form-item-fotoAddingPage-authorInput\">\r\n                                    <div className=\"form-item-fotoAddingPage-divmain\">\r\n                                        <div className=\"form-item-fotoAddingPage-div1\">\r\n                                            <label className=\"label-fotoAddingPage-titel\">Urheber:</label>\r\n                                        </div>\r\n                                        <div className=\"form-item-fotoAddingPage-div2\">\r\n                                            <label className=\"label-fotoAddingPage-titel\">Urheber ist Besitzer:</label>\r\n                                            <Switch\r\n                                                value={copyrightSourceIsAuthor}\r\n                                                onChange={handleChangeCopyrightSourceIsAuthor}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Input\r\n                                        id=\"copyrightSource\"\r\n                                        prefix={<CopyrightOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Urheber der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={copyrightSourceValue}\r\n                                        onChange={handleChangeCopyrightSource}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.copyrightSource && touched.copyrightSource ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.copyrightSource && touched.copyrightSource && (\r\n                                        <div className=\"input-feedback\">{errors.copyrightSource}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required >\r\n                                    <label className=\"label-fotoAddingPage-titel\">Besitzer:</label>\r\n                                    <Input\r\n                                        id=\"author\"\r\n                                        disabled={copyrightSourceIsAuthor}\r\n                                        prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Besitzer der Fotografie (kann gleich sein wie Urheber)\"\r\n                                        type=\"text\"\r\n                                        value={authorValue}\r\n                                        onChange={handleChangeAuthor}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.author && touched.author ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.author && touched.author && (\r\n                                        <div className=\"input-feedback\">{errors.author}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item required>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Titel:</label>\r\n                                    <Input\r\n                                        id=\"title\"\r\n                                        prefix={<EditOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Titel der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={titleValue}\r\n                                        onChange={handleChangeTitle}\r\n                                        onBlur={handleBlur}\r\n                                        maxLength={255}\r\n                                        className={\r\n                                            errors.title && touched.title ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.title && touched.title && (\r\n                                        <div className=\"input-feedback\">{errors.title}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Bild Beschreibung:</label>\r\n                                    <Input.TextArea\r\n                                        id=\"description\"\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={descriptionValue}\r\n                                        onChange={handleChangeDescription}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.description && touched.description ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.description && touched.description && (\r\n                                        <div className=\"input-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Haupt Zuordnung:</label>\r\n\r\n                                    <Select\r\n                                        onChange={handleChangeMainTag}\r\n                                        value={mainTagValue}\r\n                                    >\r\n                                        <Select.Option\r\n                                            value=\"building\"\r\n                                        >Gebäude</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"object\"\r\n                                        >Gegenstand</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"human\"\r\n                                        >Mensch</Select.Option>\r\n                                        <Select.Option\r\n                                            value=\"location\"\r\n                                        >Ortschaft</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Kategorie Zuordnung:</label>\r\n                                    <ReactTags\r\n                                        tags={tags}\r\n                                        suggestions={suggestions}\r\n                                        handleDelete={handleDeleteTags}\r\n                                        handleAddition={handleAdditionTags}\r\n                                        handleDrag={handleDragTags}\r\n                                        delimiters={delimiters}\r\n                                        autofocus={false}\r\n                                        minQueryLength={0}\r\n                                        // minQueryLength={suggestions.length > 20 ? 2 : suggestions.length > 10 ? 1 : 0}\r\n                                        inline={false}\r\n                                        allowDeleteFromEmptyInput={false}\r\n                                        placeholder={\"Kategorie auswählen\"}\r\n                                    />\r\n                                    <label className=\"label-fotoAddingPage-titel\">Neue Kategorie Hinzufügen:</label>\r\n                                    <Input\r\n                                        id=\"tagadd\"\r\n                                        prefix={<PlusOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Kategorie hinzufügen\"\r\n                                        type=\"text\"\r\n                                        value={newTagValue}\r\n                                        onChange={handleChangeAddTag}\r\n                                        onBlur={handleBlur}\r\n                                        maxLength={255}\r\n                                    />\r\n                                    <Button type=\"primary\" className=\"\" onClick={() => handleSaveNewTag()}>\r\n                                        Kategorie hinzufügen\r\n                                </Button>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-item-fotoAddingPage-creationDate\">\r\n                                    <label className=\"label-fotoAddingPage-titel\">Erstell Datum der Fotografie:</label>\r\n                                    <div>\r\n                                        <DatePicker\r\n                                            onChange={handleChangeCreationDate}\r\n                                            className=\"datePicker-fotoAddingPage\"\r\n                                            value={moment(creationDateValue, 'YYYY-MM-DD')}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">GPS Location:</label>\r\n                                    <Input\r\n                                        id=\"gpsLocation\"\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={locationValue}\r\n                                        onChange={handleChangeLocation}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.gpsLocation && touched.gpsLocation ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.gpsLocation && touched.gpsLocation && (\r\n                                        <div className=\"input-feedback\">{errors.gpsLocation}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Stadt/Dorf:</label>\r\n                                    <Input\r\n                                        id=\"city\"\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={cityValue}\r\n                                        onChange={handleChangeCity}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.city && touched.city ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.city && touched.city && (\r\n                                        <div className=\"input-feedback\">{errors.city}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <label className=\"label-fotoAddingPage-titel\">Land:</label>\r\n                                    <Input\r\n                                        id=\"country\"\r\n                                        prefix={<CompassOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Beschreibung der Fotografie\"\r\n                                        type=\"text\"\r\n                                        value={countryValue}\r\n                                        onChange={handleChangeCountry}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.country && touched.country ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                        rows={6}\r\n                                        maxLength={5000}\r\n                                    />\r\n                                    {errors.country && touched.country && (\r\n                                        <div className=\"input-feedback\">{errors.country}</div>\r\n                                    )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <div>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                                            Änderungen Speichern\r\n                                    </Button>\r\n                                    </div>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default FotoAddingPage","import React, { useEffect, useState } from 'react'\r\nimport \"./AdminLandingPage.css\"\r\nimport { Card, CardTitle, CardImg, CardBody, Row, Col } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Input, Button, Checkbox, Select } from 'antd';\r\nimport DownOutlined from '@ant-design/icons/DownOutlined';\r\nimport EditOutlined from '@ant-design/icons/EditOutlined';\r\nimport UpOutlined from '@ant-design/icons/UpOutlined';\r\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Collapsible from 'react-collapsible';\r\nimport { USER_IP } from '../../IPConfig';\r\n\r\nfunction LandingPage(props) {\r\n    const [fotos, setFotos] = useState([]);\r\n    const [loadingValue, setLoadingValue] = useState(false);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [onCollapseValue, setOnCollapseValue] = useState(false);\r\n    const [filterCopyrightSource, setFilterCopyrightSource] = useState(true);\r\n    const [filterAuthor, setFilterAuthor] = useState(true);\r\n    const [filtercreationDate, setFiltercreationDate] = useState(true);\r\n    const [filterTitle, setFilterTitle] = useState(true);\r\n    const [filterImageMaterial, setFilterImageMaterial] = useState(true);\r\n    const [filterCountry, setFilterCountry] = useState(true);\r\n    const [filterCity, setFilterCity] = useState(true);\r\n    const [filterAll, setfilterAll] = useState(true);\r\n    const [filterDescription, setfilterDescription] = useState(true);\r\n    const [mainTagValue, setMainTagValue] = useState('unspecified');\r\n\r\n    useEffect(() => {\r\n        getAllFotos();\r\n    }, []);\r\n\r\n    function getAllFotos() {\r\n        Axios.post(\"/api/fotos/allFotos\")\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //alert(\"nice!\");\r\n                    console.log(response.data.fotos);\r\n                    setFotos(response.data.fotos);\r\n                    if (response.data.fotos.length === 0) {\r\n                        //setDisplayedTextValue(\"Keine Einträge gefunden!\");\r\n                        notifyError(\"Keine Einträge gefunden!\");\r\n                    }\r\n                } else if (response.data.error) {\r\n                    notifyError(\"Hinzufügen fehlgeschlagen!\");\r\n                    notifyError(\"Fehler: \" + response.data.error.code);\r\n                } else {\r\n                    //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                    notifyError(\"Anmelden um Fotgrafien einzusehen!\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSearch = value => {\r\n        // console.log(filterCopyrightSource)\r\n        // console.log(filterAuthor)\r\n        // console.log(filtercreationDate)\r\n        // console.log(filterTitle)\r\n        // console.log(filterImageMaterial)\r\n        // console.log(filterCountry)\r\n        // console.log(filterCity)\r\n        var mainTag = mainTagValue;\r\n        if (mainTagValue === \"unspecified\") {\r\n            mainTag = \"false\";\r\n        }\r\n\r\n        const dataToSubmit = {\r\n            searched: value,\r\n            filterCopyrightSource: filterCopyrightSource,\r\n            filterAuthor: filterAuthor,\r\n            filtercreationDate: filtercreationDate,\r\n            filterTitle: filterTitle,\r\n            filterImageMaterial: filterImageMaterial,\r\n            filterCountry: filterCountry,\r\n            filterCity: filterCity,\r\n            mainTag: mainTag,\r\n            filterDescription: filterDescription\r\n        }\r\n        setLoadingValue(true);\r\n\r\n        Axios.post(\"/api/fotos/searchFotos\", dataToSubmit)\r\n            .then(response => {\r\n                setLoadingValue(false);\r\n                if (response.data.success) {\r\n                    //alert(\"nice!\");\r\n                    //console.log(response.data.fotos);\r\n                    setFotos(response.data.fotos);\r\n                    if (response.data.fotos.length === 0) {\r\n                        //setDisplayedTextValue(\"Keine Einträge gefunden!\");\r\n                        notifyError(\"Keine Einträge gefunden!\");\r\n                    }\r\n                } else {\r\n                    if (response.data.error) {\r\n                        notifyError(\"Fehler: \" + response.data.error.code);\r\n                    } else {\r\n                        //alert(\"Zugriff auf Foto-Datenbank fehlgeschlagen!\")\r\n                        notifyError(\"Anmelden um Fotgrafien einzusehen!\")\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    function handleChangeSearchValue(event) {\r\n        //console.log(event.target.value);\r\n        if (event.target.value === \"\") {\r\n            getAllFotos();\r\n        }\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    function handleOnCollapseValue() {\r\n        setOnCollapseValue(!onCollapseValue);\r\n    }\r\n\r\n    function handleChangefilterCopyrightSource() {\r\n        setFilterCopyrightSource(!filterCopyrightSource);\r\n    }\r\n\r\n    function handleChangefilterAuthor() {\r\n        setFilterAuthor(!filterAuthor);\r\n    }\r\n\r\n    function handleChangefiltercreationDate() {\r\n        setFiltercreationDate(!filtercreationDate);\r\n    }\r\n\r\n    function handleChangefilterTitle() {\r\n        setFilterTitle(!filterTitle);\r\n    }\r\n\r\n    function handleChangefilterImageMaterial() {\r\n        setFilterImageMaterial(!filterImageMaterial);\r\n    }\r\n\r\n    function handleChangefilterCountry() {\r\n        setFilterCountry(!filterCountry);\r\n    }\r\n\r\n    function handleChangefilterCity() {\r\n        setFilterCity(!filterCity);\r\n    }\r\n\r\n    function handleChangeFilterDescription() {\r\n        setfilterDescription(!filterDescription);\r\n    }\r\n\r\n    function handleChangefiltefilterAll() {\r\n        setFilterCopyrightSource(!filterAll);\r\n        setFilterAuthor(!filterAll);\r\n        setfilterAll(!filterAll);\r\n        setFilterCity(!filterAll);\r\n        setFilterCountry(!filterAll);\r\n        setFilterImageMaterial(!filterAll);\r\n        setFiltercreationDate(!filterAll);\r\n        setFilterTitle(!filterAll);\r\n        setfilterDescription(!filterAll);\r\n    }\r\n\r\n    function handleChangeMainTag(value) {\r\n        setMainTagValue(value);\r\n    }\r\n\r\n    function handleEditClick(_id) {\r\n        //console.log(_id)\r\n        //console.log(props.user.userData.role)\r\n        if (props.user.userData.role === 1) {\r\n            props.history.push(\"/fotos/edit/\" + _id);\r\n        }\r\n    }\r\n\r\n    function handleDeleteClick(_id){\r\n\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });;\r\n\r\n    const fotoCards = fotos.map((foto, index) => {\r\n        return (\r\n            <Col key={index} xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"2\" xxl=\"1\" className=\"card-col\">\r\n\r\n                <Card id=\"card-fotodisplay\">\r\n                    <Button onClick={() => handleEditClick(foto._fotosid)} type=\"primary\" className=\"button-adminLandingPage-edit\">\r\n                        <EditOutlined />\r\n                    </Button>\r\n                    <Button shape=\"circle\" onClick={() => handleDeleteClick(foto._fotosid)} type=\"danger\" className=\"button-adminLandingPage-delete\">\r\n                        <DeleteOutlined />\r\n                    </Button>\r\n                    <Link to={{\r\n                        pathname: \"/fotos/view/\" + foto._id,\r\n                        params: fotos,\r\n                        indexValue: index,\r\n                        exact: true,\r\n                        strict: true\r\n                    }}\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <CardBody className=\"cardBody-landingPage\">\r\n                            <div className=\"div-landingPage-titlebutton\">\r\n                                <CardTitle tag=\"h5\" className=\"card-text card-text-admin\">{foto.title}</CardTitle>\r\n                            </div>\r\n                        </CardBody>\r\n                        <div id=\"card-img-div\">\r\n                            <CardImg id=\"card-img\" src={\"https://\"+USER_IP+\":5000/\" + foto.compressedImage} alt=\"Card image cap\" />\r\n                        </div>\r\n                        <div className=\"card-description-text card-description card-text\">\r\n                            {foto.description}\r\n                        </div>\r\n                    </Link>\r\n                </Card>\r\n            </Col >\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"div-landingPage-main\">\r\n            <div className=\"Searchbar-landingPage\">\r\n                <Input.Search\r\n                    placeholder=\"Nach Fotografien Suchen...\"\r\n                    allowClear\r\n                    enterButton=\"Suchen\"\r\n                    loading={loadingValue}\r\n                    size=\"large\"\r\n                    onSearch={onSearch}\r\n                    value={searchValue}\r\n                    onChange={handleChangeSearchValue}\r\n                />\r\n            </div>\r\n            <div className=\"div-collapsible-landingPage\">\r\n                <Collapsible\r\n                    className=\"collapsible-landingPage\"\r\n                    trigger={\r\n                        <Button className=\"button-landingPage-collapsible\" onClick={() => handleOnCollapseValue()}>\r\n                            {onCollapseValue === false ?\r\n                                <DownOutlined className=\"p-landingPage-collappsiblebutton\"></DownOutlined>\r\n                                :\r\n                                <UpOutlined className=\"p-landingPage-collappsiblebutton\"></UpOutlined>\r\n                            }\r\n                            <p className=\"p-landingPage-collappsiblebutton\">Suchfilter</p>\r\n                        </Button>\r\n                    }>\r\n                    <div className=\"div-landingPage-filtermain\">\r\n                        <div className=\"div-landingpage-checkboxes\">\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <p style={{ fontWeight: \"bolder\" }} className=\"p-landingPage-checkboxName\">Personalisierte Suche:</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterAll} onClick={() => handleChangefiltefilterAll()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Alle Auswählen</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCopyrightSource} onClick={() => handleChangefilterCopyrightSource()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Urheber der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterAuthor} onClick={() => handleChangefilterAuthor()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Besiter der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filtercreationDate} onClick={() => handleChangefiltercreationDate()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Aufnahme Datum</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterTitle} onClick={() => handleChangefilterTitle()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Titel der Fotografie</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterImageMaterial} onClick={() => handleChangefilterImageMaterial()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Bildmaterial</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCountry} onClick={() => handleChangefilterCountry()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Land</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterCity} onClick={() => handleChangefilterCity()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Stadt/Dorf</p>\r\n                            </div>\r\n                            <div className=\"div-landingPage-CheckboxWrapper\">\r\n                                <Checkbox className=\"checkbox-landingPage\" checked={filterDescription} onClick={() => handleChangeFilterDescription()} />\r\n                                <p className=\"p-landingPage-checkboxName\">Beschreibung</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"select-landingPage-mainTag\">\r\n                            <Select\r\n                                onChange={handleChangeMainTag}\r\n                                defaultValue={mainTagValue}\r\n                                className=\"selection-landingpage\"\r\n                            >\r\n                                <Select.Option\r\n                                    value=\"unspecified\"\r\n                                >Beliebige Kategorie</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"building\"\r\n                                >Gebäude</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"object\"\r\n                                >Gegenstand</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"human\"\r\n                                >Mensch</Select.Option>\r\n                                <Select.Option\r\n                                    value=\"location\"\r\n                                >Ortschaft</Select.Option>\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                </Collapsible>\r\n            </div>\r\n\r\n            <ToastContainer />\r\n            {\r\n                fotos.length === 0 ?\r\n                    <div className=\"div-landingPage-displayedText\">\r\n                    </div> :\r\n                    <Row className=\"card-row\">\r\n                        {fotoCards}\r\n                    </Row>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport \"./HomePage.css\"\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport pergament1 from \"./../../ressources/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 2.png\"\r\nimport pergament2 from \"./../../ressources/png-transparent-kraft-paper-kraft-paper-old-paper-nostalgic-background-removebg 1.png\"\r\nimport logo from \"./../../ressources/logo 1.svg\"\r\nimport card1 from \"./../../ressources/Frame 7.svg\"\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className=\"div-homepage-main\">\r\n            <div className=\"div-pergament1-homePage\">\r\n                <img className=\"img-pergament1-homePage\" src={pergament1}></img>\r\n            </div>\r\n            <div className=\"div-pergament2-homePage\">\r\n                <img className=\"img-pergament2-homePage\" src={pergament2}></img>\r\n            </div>\r\n            <div className=\"div-homePage-cardandlogo\">\r\n                <div className=\"logo-homePage-mainlogo\">\r\n                    <Link to=\"/aboutPage\">\r\n                        <div className=\"card1-homePage-josef\">\r\n                            <img src={card1}></img>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-homePage-mainCard\">\r\n                    <Link to=\"/landingPage\">\r\n                        <div className=\"logo-homePage-main\">\r\n                            <img src={logo}></img>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/login\">\r\n                        <Button type=\"primary\" size=\"large\" className=\"button-homePage-login\">\r\n                            Anmelden\r\n                    </Button>\r\n                    </Link>\r\n                    <Link to=\"/register\">\r\n                        <Button size=\"large\" className=\"button-homePage-register\">\r\n                            Registrieren\r\n                    </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport \"./AboutPage.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport bio from \"./../../ressources/Frame 1.png\"\r\nimport about from \"./../../ressources/1129342 1.png\"\r\nimport { USER_IP } from '../../IPConfig';\r\n\r\nfunction AboutPage() {\r\n    const link = \"https://\"+USER_IP+\":5000/uploads/Biografie_Niederkofler_Johann.pdf\"\r\n    return (\r\n        <div className=\"div-aboutPage-main\">\r\n            <a href={link} download=\"Biografie_Niederkofler_Johann\">\r\n                <div className=\"div-aboutPage-leftBio\">\r\n                    <img src={bio}></img>\r\n                </div>\r\n            </a>\r\n            <div className=\"div-aboutPage-rightAbout\">\r\n                <img src={about}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage\r\n","import React, { useState, useEffect } from 'react'\nimport Dropzone from \"react-dropzone\"\nimport { Icon } from \"antd\"\nimport \"./NewFileUpload.css\"\nimport Axios from \"axios\"\nimport { USER_IP } from '../IPConfig'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { css } from \"@emotion/react\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport Collapsible from 'react-collapsible';\nimport { Input, Button, Checkbox, Select } from 'antd';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport UpOutlined from '@ant-design/icons/UpOutlined';\nimport DownloadOutlined from '@ant-design/icons/DownloadOutlined';\n//import { DownloadOutlined } from '@ant-design/icons';\n\n\nfunction NewFileUpload(props) {\n\n    const [images, setImages] = useState([]);\n    const [imagesWatermark, setImagesWatermark] = useState([]);\n    const [imagesSmall, setImagesSmall] = useState([]);\n    const [decideImage, setDecideImage] = useState([])\n    const [onCollapseValue, setOnCollapseValue] = useState([]);\n    const [selectedValue, setSelectedValue] = useState([]);\n    const [currentSelected, setCurrentSelected] = useState(null);\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: { \"content-type\": \"multipart/form-data\" }\n        }\n        const imageName = {\n            imagename: files[0].name\n        }\n        formData.append(\"file\", files[0])\n        //console.log(files[0].name)\n\n        //Collapsible\n        setOnCollapseValue([...onCollapseValue, { state: false }]);\n        //Selected\n        setSelectedValue([...selectedValue, { state: false }]);\n        //Image\n        setImages([...images, null]);\n        let imagePos = images.length;\n        //console.log(imagePos);\n\n        // setImageLoadValue([...imageLoadValue, true]);\n        // let loadPosition = images.length;\n\n        //check if image exists\n        Axios.post(\"/api/fotos/checkImagePath\", imageName)\n            .then(response => {\n                if (response.data.success) {\n                    //save the Image\n                    Axios.post(\"/api/fotos/uploadImage\", formData, config)\n                        .then(response => {\n                            if (response.data.success) {\n                                //props.refreshFunction([...images, response.data.image])\n                                let newImages = [...images];\n                                newImages[imagePos] = response.data.image;\n                                setImages(newImages);\n\n                                let newImagesWatermark = [...imagesWatermark];\n                                newImagesWatermark[imagePos] = response.data.imageWatermark;\n                                setImagesWatermark(newImagesWatermark);\n                                \n                                let newImagesSmall = [...imagesSmall];\n                                newImagesSmall[imagePos] = response.data.imageSmall;\n                                setImagesSmall(newImagesSmall);\n                            } else {\n                                notifyError(\"Bild konnt nich hochgeladen werden\")\n                                notifyError(\"Fehler: \" + response.data.error)\n                            }\n                        })\n                } else {\n                    let originalpath = response.data.path;\n                    Axios.post(\"/api/fotos/uploadImage\", formData, config)\n                        .then(response => {\n                            if (response.data.success) {\n                                setDecideImage([...decideImage, { id: imagePos, path: originalpath, newpath: response.data.image }]);\n                                notifyError(\"Bild: \" + response.data.image + \" bereits vorhanden!\")\n                            } else {\n                                notifyError(\"Bild konnt nich hochgeladen werden\")\n                                notifyError(\"Fehler: \" + response.data.error)\n                            }\n                        })\n                    //console.log(response.data.path)\n                }\n            })\n    }\n\n    const onDelete = (image) => {\n        const currentIndex = images.indexOf(image);\n\n        //Collapsible\n        let newcollapseValue = [...onCollapseValue]\n        newcollapseValue.splice(currentIndex, 1)\n        setOnCollapseValue(newcollapseValue);\n\n        //Selected\n        let newselectValue = [...selectedValue]\n        newselectValue.splice(currentIndex, 1)\n        setSelectedValue(newselectValue);\n\n        //image\n        let newImages = [...images]\n        newImages.splice(currentIndex, 1)\n        setImages(newImages);\n        // props.refreshFunction(newImages);\n\n        const dataToSubmit = {\n            image: image\n        }\n\n        Axios.post(\"/api/fotos/deleteImage\", dataToSubmit)\n            .then(response => {\n                if (response.data.success) {\n                    notify(\"Bild: \" + image + \" gelöscht\")\n                } else {\n                    notifyError(\"Bild konnt nicht richtig gelöscht werden\")\n                    notifyError(\"Fehler: \" + response.data.error);\n                }\n            })\n    }\n\n\n    function handleOnCollapseValue(index) {\n        let newCollapseValue = [...onCollapseValue];\n        newCollapseValue[index].state = !newCollapseValue[index].state;\n        setOnCollapseValue(newCollapseValue);\n        // console.log(newCollapseValue[index]);\n        // console.log(index)\n        // console.log(onCollapseValue);\n        // console.log(onCollapseValue[index])\n    }\n\n    function handleOnSelectImage(index) {\n        let newSelectedValue = [...selectedValue];\n        newSelectedValue.forEach((item, index) => {\n            newSelectedValue[index].state = false;\n        })\n        newSelectedValue[index].state = true;\n        setSelectedValue(newSelectedValue);\n\n        //set selected name\n        setCurrentSelected(index);\n    }\n\n    useEffect(() => {\n\n    }, []);\n\n    const notifyError = (text) => toast.error(text, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n    });;\n\n    const notify = (text) => toast.success(text, {\n        position: \"bottom-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    });\n\n    function handleRemoveDecideImage(index) {\n        const newList = decideImage.filter((item) => item.id != index);\n        setDecideImage(newList);\n    }\n\n    function onDecideNewImage(index, oldimg, newimg) {\n        let imagename = oldimg;\n        let newoldimagenameindex = oldimg.indexOf(\".\")\n        var add = \"(duplikat)\";\n        let newoldimagename = [oldimg.slice(0, newoldimagenameindex), add, oldimg.slice(newoldimagenameindex)].join('');\n        //rename old\n        const dataToSubmit = {\n            image: oldimg,\n            newname: newoldimagename\n        }\n        Axios.post(\"/api/fotos/renameImage\", dataToSubmit)\n            .then(response => {\n                if (response.data.success) {\n                    //rename new\n                    const dataToSubmit2 = {\n                        image: newimg,\n                        newname: imagename\n                    }\n                    Axios.post(\"/api/fotos/renameImage\", dataToSubmit2)\n                        .then(response => {\n                            if (response.data.success) {\n                                //add old to arr\n                                let newImages = [...images];\n                                newImages[index] = imagename;\n                                setImages(newImages);\n                            } else {\n                                notifyError(\"Bild konnt nicht richtig umbennent werden\")\n                                notifyError(\"Fehler: \" + response.data.error);\n                            }\n                        })\n                } else {\n                    notifyError(\"Bild konnt nicht richtig umbennent werden\")\n                    notifyError(\"Fehler: \" + response.data.error);\n                }\n            })\n        handleRemoveDecideImage(index);\n    }\n\n    function onDecideOldImage(index, oldimg, newimg) {\n        //add old to arr\n        let newImages = [...images];\n        newImages[index] = oldimg;\n        setImages(newImages);\n\n        //delete new\n        const dataToSubmit = {\n            image: newimg\n        }\n        Axios.post(\"/api/fotos/deleteImage\", dataToSubmit)\n            .then(response => {\n                if (response.data.success) {\n                    notify(\"Bild: \" + newimg + \" gelöscht\")\n                } else {\n                    notifyError(\"Bild konnt nicht richtig gelöscht werden\")\n                    notifyError(\"Fehler: \" + response.data.error);\n                }\n            })\n        handleRemoveDecideImage(index);\n\n        /*LOAD DATA OF FOTO*/\n    }\n\n    /*\n    useEffect(() => {\n        //console.log(props.defaultImage)\n        if(props.defaultImage){\n            setImages([props.defaultImage])\n            props.refreshFunction([props.defaultImage])\n        }\n    }, [props.defaultImage]);*/\n\n    return (\n        <div className=\"div-main\">\n            {/* {decideImage.map((item) => (\n                <div>{item.id + item.path}</div>\n            ))} */}\n            <ToastContainer />\n            <div className=\"div-newfileupload-container\">\n                <div className=\"div-newfileUpload-displayPicture\">\n                    <div className=\"div-newfileupload-displayImage\">\n                        <div className=\"div-newFileUpload-imagesrow div-newfilupload-displayImage-childs\">\n                            {imagesWatermark.map((image, index) => (\n                                <>\n                                    {\n                                        image != null ?\n                                            <div onClick={() => handleOnSelectImage(index)} style={selectedValue[index].state === true ? { border: \"8px solid #026B79\" } : {}} className=\"div-newfileupload-imagecontainer\" key={index} >\n                                                <div className=\"div-buttonuploadpage-deletimage\">\n                                                    <button onClick={() => onDelete(image)} className=\"button-uploadpage-deleteimage\"><i class=\"icon-newfileupload-delete fa fa-trash\"></i></button>\n                                                </div>\n                                                <img className=\"img-newfileupload-images\" src={`https://` + USER_IP + `:5000/${image}`} alt={`${image}`}></img>\n                                            </div>\n                                            :\n                                            <>{\n                                                decideImage.filter((item) => item.id == index).length > 0 ?\n                                                    <div onClick={() => handleOnSelectImage(index)} style={selectedValue[index].state === true ? { border: \"8px solid #026B79\" } : {}} className=\"div-newfileupload-imagecontainer\" key={index} >\n                                                        <div className=\"div-newfileupload-decidedisplay\">\n                                                            <div className=\"div-newfileupload-blocktopdecide\">\n                                                                <div className=\"div-newfileupload-blockdecide1\">\n                                                                    <p className=\"p-newfileupload-decidedisplay\">Altes Foto behalten</p>\n                                                                    <img onClick={() => onDecideOldImage(index, decideImage.filter((item) => item.id == index)[0].path, decideImage.filter((item) => item.id == index)[0].newpath)} className=\"img-newfileupload-decideimg\" src={`https://` + USER_IP + `:5000/${decideImage.filter((item) => item.id == index)[0].path}`} alt={`${image}`}></img>\n                                                                </div>\n                                                                <div className=\"div-newfileupload-blockdecide2\">\n                                                                    <p className=\"p-newfileupload-decidedisplay\">Mit neuem Foto ersetzen</p>\n                                                                    <img onClick={() => onDecideNewImage(index, decideImage.filter((item) => item.id == index)[0].path, decideImage.filter((item) => item.id == index)[0].newpath)} className=\"img-newfileupload-decideimg\" src={`https://` + USER_IP + `:5000/${decideImage.filter((item) => item.id == index)[0].newpath}`} alt={`${image}`}></img>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"div-newfileupload-blockbottomdecide\">\n                                                                <div className=\"div-newfileupload-blockdecide3\">\n\n                                                                </div>\n                                                                <div className=\"div-newfileupload-blockdecide4\">\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    :\n                                                    <div onClick={() => handleOnSelectImage(index)} style={selectedValue[index].state === true ? { border: \"8px solid #026B79\" } : {}} className=\"div-newfileupload-imagecontainer\" key={index} >\n                                                        <div className=\"loading-newfileupload-loadingdisplay\">\n                                                            <SyncLoader loading={true} color=\"#026B79\" size={40}></SyncLoader>\n                                                        </div>\n                                                    </div>\n                                            }</>\n                                    }\n                                </>\n\n                            ))}\n                        </div>\n                        <div className=\"div-newfilupload-displayImage-childs\">\n                            <div className=\"div-newFileUpload-imagesrow div-newfilupload-displayImage-childs\">\n                                {imagesSmall.map((image, index) => (\n                                    <Collapsible\n                                        className=\"collabsible-newfileupload\"\n                                        open={onCollapseValue[index].state}\n                                        trigger={\n                                            <Button className=\"button-uploadingpage-collapsible\" onClick={() => handleOnCollapseValue(index)}>\n                                                {onCollapseValue[index].state === false ?\n                                                    <DownOutlined className=\"p-uploadingpage-collappsiblebutton\"></DownOutlined>\n                                                    :\n                                                    <UpOutlined className=\"p-uploadingpage-collappsiblebutton\"></UpOutlined>\n                                                }\n                                                <p className=\"p-uploadingpage-collappsiblebutton\">Original Fotografie Ansehen</p>\n                                            </Button>\n                                        }>\n                                        <div className=\"div-newfileupload-imagecontainer\" key={index} onClick={() => onDelete(image)}>\n                                            <img className=\"img-newfileupload-images\" src={`https://` + USER_IP + `:5000/${image}`} alt={image}></img>\n                                            <SyncLoader loading={false} size={30}></SyncLoader>\n                                        </div>\n                                    </Collapsible>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"div-newfilupload-displayImage-childs\">\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"div-fileupload-bottomdisplay-container\">\n                    <div\n                        className=\"div-fileupload-namedisplay\"\n                    >\n                        <>{currentSelected != null ? <>{images[currentSelected] != null ? <p>{images[currentSelected].split(\"/\")[1].split(\".\")[0]}</p> : <></>}</> : <p>Nichts Ausgewählt</p>}</>\n                    </div>\n\n                    <div\n                        className=\"dropzone-newFileupload\"\n                    >\n                        <Dropzone\n                            onDrop={onDrop}\n                            multiple={true}\n                            maxSize={800000000}\n                            className=\"dropzone-newfileupload-dropzone\"\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div className=\"\"\n                                    {...getRootProps()}\n                                >\n                                    {/* {console.log('getRootProps', { ...getRootProps() })}\n                        {console.log('getInputProps', { ...getInputProps() })} */}\n                                    <input {...getInputProps()} />\n                                    <Icon type=\"plus\" style={{ fontSize: '2.8rem' }} />\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default NewFileUpload\n\n\n/*import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\nimport \"./FileUpload.css\"\n\nfunction FileUpload(props) {\n\n    const [Images, setImages] = useState([])\n\n    const onDrop = (files) => {\n\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        formData.append(\"file\", files[0])\n        //save the Image we chose inside the Node Server\n        Axios.post('/api/fotos/uploadImage', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    setImages([...Images, response.data.image])\n                    props.refreshFunction([...Images, response.data.image])\n                } else {\n                    alert('Failed to save the Image in Server')\n                }\n            })\n    }\n\n\n    const onDelete = (image) => {\n        const currentIndex = Images.indexOf(image);\n\n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n    return (\n        <div className=\"div-main\">\n            <Dropzone\n                onDrop={onDrop}\n                multiple={false}\n                maxSize={800000000}\n                className=\"div-dropzone\"\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{\n                        width: '300px', height: '240px', border: '1px solid lightgray',\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\n                    }}\n                        {...getRootProps()}\n                    >\n                        {console.log('getRootProps', { ...getRootProps() })}\n                        {console.log('getInputProps', { ...getInputProps() })}\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n\n                    </div>\n                )}\n            </Dropzone>\n\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n\n                {Images.map((image, index) => (\n                    <div onClick={() => onDelete(image)}>\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`http://localhost:5000/${image}`} alt={`productImg-${index}`} />\n                    </div>\n                ))}\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default FileUpload\n*/\n","import React from 'react'\r\nimport NewFileUpload from \"../../utils/NewFileUpload\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction TestPage() {\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n                            \r\n            <NewFileUpload></NewFileUpload>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPage\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\nimport \"./App.css\"\n// pages for this product\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport LandingPage from './views/LandingPage/LandingPage';\nimport FotoAddingPage from './views/FotoAddingPage/FotoAddingPage';\nimport ViewingPage from './views/ViewingPage/ViewingPage';\nimport UserManagePage from './views/UserManagePage/UserManagePage';\nimport FotoEditingPage from './views/FotoEditingPage/FotoEditingPage';\nimport AdminLandingPage from './views/AdminLandingPage/AdminLandingPage';\nimport HomePage from './views/HomePage/HomePage';\nimport AboutPage from './views/AboutPage/AboutPage';\nimport TestPage from './views/TestPage/TestPage';\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div id=\"body-background\">\n        <Switch>\n          <Route exact path=\"/\" component={Auth(HomePage, false)} />\n          <Route exact path=\"/aboutPage\" component={Auth(AboutPage, false)} />\n          <Route exact path=\"/landingPage\" component={Auth(LandingPage, true)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/fotos/add\" component={Auth(FotoAddingPage, true, true)} />\n          <Route exact path=\"/fotos/view/:id\" component={Auth(ViewingPage, true)} />\n          <Route exact path=\"/fotos/edit\" component={Auth(AdminLandingPage, true, true)} />\n          <Route exact path=\"/fotos/edit/:id\" component={Auth(FotoEditingPage, true, true)} />\n          <Route exact path=\"/users/edit\" component={Auth(UserManagePage, true, true)} />\n          <Route exact path=\"/test\" component={Auth(TestPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER\n} from '../_actions/types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n//import 'bootstrap/dist/css/bootstrap.css';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}